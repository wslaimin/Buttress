plugins {
    id 'org.jetbrains.intellij' version '1.4.0'
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'
}

group 'com.lm'
version '1.1.2'

repositories {
    mavenCentral()
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = '2019.3.1'
    //localPath = '/Applications/IntelliJ IDEA CE.app'
    updateSinceUntilBuild = false
}

patchPluginXml {
    changeNotes = """
    <p>1.1.2</p>
    <ul>
      <li>fix wrong directory returned by getModuleDir</li>
    </ul>
    <p>1.1.1</p>
    <ul>
      <li>Remove deprecated apis</li>
      <li>Fix a compatibility problem</li>
    </ul>
    <p>1.1.0</p>
    <ul>
      <li>The plugin is renamed to "Buttress"</li>
      <li>Simplified configuration</li>
      <li>Automatic matching of file extensions</li>
    </ul>
    <p>1.0.1</p>
    <ul>
      <li>Fix the bug of class created by template having no class name</li>
    </ul>
    <br/>
    <p>1.0.0</p>
    <ul>
      <li>Support Custom template of VTL(Velocity Template Language)</li>
      <li>Support Custom options of clean architecture</li>
      <li>Preview file structure to be created</li>
    </ul>
    """
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("keys/secret.properties")))

signPlugin {
    certificateChain = rootProject.file("keys/chain.crt").text

    privateKey = rootProject.file("keys/private.pem").text

    password = localProperties.get("sign.password")
}

publishPlugin{
    token = localProperties.get("publish.token")
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
